# Generated by Django 3.1.2 on 2020-10-15 00:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'agents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('conceptid', models.IntegerField(db_column='conceptId', unique=True)),
                ('valueconcept', models.IntegerField(db_column='valueConcept')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'attachments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('company', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'brands',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Console',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('version', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'consoles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('position', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=70)),
                ('last_name', models.CharField(max_length=70)),
                ('phone_number', models.CharField(max_length=50)),
                ('mobile_number', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('start_datetime', models.DateTimeField(blank=True, db_column='startDatetime', null=True)),
                ('end_datetime', models.DateTimeField(blank=True, db_column='endDatetime', null=True)),
                ('stand_by_datetime', models.DateTimeField(blank=True, db_column='standByDatetime', null=True)),
                ('reactive_datetime', models.DateTimeField(blank=True, db_column='reactiveDatetime', null=True)),
                ('cancel_datetime', models.CharField(blank=True, db_column='cancelDatetime', max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('frequency_mtn_id', models.IntegerField(blank=True, db_column='frequencyMtnId', null=True, unique=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.contact')),
            ],
            options={
                'db_table': 'contracts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContractFrequency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'contracts_frequencies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Correction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=250)),
                ('service_target_id', models.IntegerField(db_column='serviceTargetId')),
            ],
            options={
                'db_table': 'corrections',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=70)),
                ('currency_code', models.CharField(max_length=3)),
                ('unlocode', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'countries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fault',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'faults',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JhaItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('is_ticked_default', models.IntegerField(blank=True, db_column='isTickedDefault', null=True)),
            ],
            options={
                'db_table': 'jha_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('project_id', models.IntegerField(db_column='projectId', unique=True)),
                ('service_type_id', models.IntegerField(db_column='serviceTypeId', unique=True)),
                ('floors', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, db_column='postCode', max_length=12, null=True)),
                ('key_access_details', models.CharField(blank=True, db_column='keyAccessDetails', max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=4000, null=True)),
                ('position', models.TextField(blank=True, null=True)),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.agent')),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.contact')),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.contract')),
            ],
            options={
                'db_table': 'jobs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('registration_number', models.CharField(blank=True, db_column='registrationNumber', max_length=100, null=True)),
                ('floor', models.CharField(blank=True, max_length=10, null=True)),
                ('drive', models.CharField(blank=True, max_length=255, null=True)),
                ('has_light_trays', models.IntegerField(db_column='hasLightRays')),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('installed_date', models.DateTimeField(blank=True, db_column='installedDate', null=True)),
                ('brand', models.ForeignKey(db_column='brandId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.brand')),
                ('job', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.job')),
            ],
            options={
                'db_table': 'lifts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'months',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('part_number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'priority',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('initial_status', models.IntegerField(db_column='initialStatus')),
            ],
            options={
                'db_table': 'process_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessTypeStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('is_final', models.IntegerField(db_column='isFinal')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtype')),
            ],
            options={
                'db_table': 'process_types_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, db_column='fullName', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('email_verified', models.IntegerField(blank=True, db_column='emailVerified', null=True)),
                ('street_address', models.CharField(blank=True, db_column='streetAddress', max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, db_column='postCode', max_length=12, null=True)),
                ('phone_verified', models.IntegerField(blank=True, db_column='phoneVerified', null=True)),
                ('status', models.IntegerField(db_column='statusId', unique=True)),
                ('last_position', models.TextField(blank=True, db_column='lastPosition', null=True)),
                ('localization_code', models.CharField(db_column='localizationCode', max_length=8)),
                ('is_active', models.BooleanField(db_column='isActive', default=True)),
                ('country', models.ForeignKey(blank=True, db_column='countryId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.country')),
            ],
            options={
                'db_table': 'profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(db_column='isActive', default=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('key_name', models.CharField(db_column='keyName', max_length=8)),
            ],
            options={
                'db_table': 'projects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceTarget',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('key_name', models.CharField(db_column='keyName', max_length=50)),
            ],
            options={
                'db_table': 'services_targets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module', models.CharField(max_length=20)),
                ('code', models.CharField(max_length=3)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('default_month', models.ForeignKey(db_column='defaultMonth', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.month')),
                ('service_target', models.ForeignKey(db_column='serviceTargetId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.servicetarget')),
            ],
            options={
                'db_table': 'tasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('notes', models.CharField(max_length=255)),
                ('profile', models.OneToOneField(db_column='profileId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.profile')),
            ],
            options={
                'db_table': 'technicians',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'titles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(max_length=255)),
                ('next_status', models.ForeignKey(db_column='nextStatus', on_delete=django.db.models.deletion.DO_NOTHING, related_name='wo_next_status', to='mrsModel.processtypestatus')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, related_name='wo_current_status', to='mrsModel.processtypestatus')),
            ],
            options={
                'db_table': 'workflows',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Workorder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_by_project', models.IntegerField(db_column='idByProject')),
                ('customer_id', models.IntegerField(db_column='customerId')),
                ('accepted_datetime', models.DateTimeField(blank=True, db_column='acceptedDatetime', null=True)),
                ('started_datetime', models.DateTimeField(blank=True, db_column='startedDatetime', null=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, db_column='scheduledDatetime', null=True)),
                ('completed_datetime', models.DateTimeField(blank=True, db_column='completedDatetime', null=True)),
                ('detected_fault', models.IntegerField(blank=True, db_column='detectedFaultId', null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=32000, null=True)),
                ('solution', models.CharField(blank=True, max_length=32000, null=True)),
                ('signature', models.IntegerField(blank=True, db_column='signatureId', null=True)),
                ('attention_time', models.IntegerField(blank=True, db_column='attentionTime', null=True)),
                ('solution_time', models.IntegerField(blank=True, db_column='solutionTime', null=True)),
                ('expected_time', models.IntegerField(blank=True, db_column='expectedTime', null=True)),
                ('is_chargeable', models.BooleanField(db_column='isChargeable', default='False')),
                ('part_required', models.IntegerField(db_column='partRequired')),
                ('is_closed', models.BooleanField(db_column='isClosed', default=False)),
                ('correction', models.ForeignKey(db_column='correctionId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.correction')),
                ('jha_items', models.ManyToManyField(to='mrsModel.JhaItem')),
                ('job', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.job')),
                ('lift', models.ForeignKey(db_column='liftId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.lift')),
                ('priority', models.ForeignKey(db_column='priorityId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.priority')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('reported_fault', models.ForeignKey(blank=True, db_column='reportedFaultId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.fault')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtypestatus')),
                ('technician', models.ForeignKey(db_column='technicianId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.technician')),
            ],
            options={
                'db_table': 'workorders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkordersHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('change_type_id', models.IntegerField(db_column='changeTypeId')),
                ('value', models.CharField(max_length=4000)),
                ('user_id', models.IntegerField(db_column='userId', unique=True)),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('workorder', models.ForeignKey(db_column='workorderId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.workorder')),
            ],
            options={
                'db_table': 'workorders_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkorderPosition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(blank=True, decimal_places=4, max_digits=4, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=4, max_digits=4, null=True)),
                ('position', models.TextField()),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtypestatus')),
                ('workorder', models.ForeignKey(db_column='workorderId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.workorder')),
            ],
            options={
                'db_table': 'workorders_positions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkorderLift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('started_datetime', models.DateTimeField(blank=True, db_column='startedDatetime', null=True)),
                ('completed_datetime', models.DateTimeField(blank=True, db_column='completedDatetime', null=True)),
                ('lift', models.ForeignKey(db_column='liftId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.lift')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtypestatus')),
                ('task', models.ForeignKey(db_column='taskId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.task')),
            ],
            options={
                'db_table': 'workorders_lifts',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='workorder',
            name='workorder_lifts',
            field=models.ManyToManyField(to='mrsModel.WorkorderLift'),
        ),
        migrations.CreateModel(
            name='WorkflowEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('new_status', models.ForeignKey(db_column='newStatus', on_delete=django.db.models.deletion.DO_NOTHING, related_name='wo_new_status', to='mrsModel.processtypestatus')),
                ('previous_status', models.ForeignKey(db_column='previousStatus', on_delete=django.db.models.deletion.DO_NOTHING, related_name='event_previous_status', to='mrsModel.processtypestatus')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('workflow', models.ForeignKey(db_column='workflowId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.workflow')),
            ],
            options={
                'db_table': 'workflow_event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UsersHistoryLogins',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('device_imei', models.CharField(blank=True, db_column='deviceIMEI', max_length=255, null=True)),
                ('browser_agent', models.CharField(blank=True, db_column='browserAgent', max_length=255, null=True)),
                ('version', models.CharField(blank=True, max_length=10, null=True)),
                ('position', models.TextField(blank=True, null=True)),
                ('login_datetime', models.DateTimeField(db_column='singInDatetime')),
                ('console', models.ForeignKey(db_column='consoleId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.console')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('user', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'users_history_logins',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ServicesTypes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('key_name', models.CharField(db_column='keyName', max_length=10)),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
            ],
            options={
                'db_table': 'services_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('colour', models.CharField(blank=True, max_length=30, null=True)),
                ('polygon', models.TextField(blank=True, null=True)),
                ('publications', models.ManyToManyField(to='mrsModel.Technician')),
            ],
            options={
                'db_table': 'rounds',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='projects',
            field=models.ManyToManyField(to='mrsModel.Project'),
        ),
        migrations.AddField(
            model_name='profile',
            name='title',
            field=models.ForeignKey(db_column='titleId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.title'),
        ),
        migrations.AddField(
            model_name='processtypestatus',
            name='project',
            field=models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project'),
        ),
        migrations.AddField(
            model_name='processtype',
            name='project',
            field=models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project'),
        ),
        migrations.CreateModel(
            name='PartRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='quantity')),
                ('description', models.CharField(blank=True, max_length=4000, null=True)),
                ('reason_chargeable', models.CharField(blank=True, db_column='reasonChargeable', max_length=4000, null=True)),
                ('remark', models.CharField(blank=True, max_length=512, null=True)),
                ('project', models.IntegerField(db_column='projectId')),
                ('part', models.ForeignKey(db_column='partId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.part')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtypestatus')),
                ('workorder', models.ForeignKey(db_column='workorderId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.workorder')),
            ],
            options={
                'db_table': 'parts_requests',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='part',
            name='supplier',
            field=models.ForeignKey(blank=True, db_column='supplierId', null=True, on_delete=django.db.models.deletion.CASCADE, to='mrsModel.supplier'),
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=8000)),
                ('workorder', models.ForeignKey(db_column='workorderId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.workorder')),
            ],
            options={
                'db_table': 'notes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LiftTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_completed', models.IntegerField(db_column='isCompleted')),
                ('completed_Datetime', models.DateTimeField(db_column='completedDatetime')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('task', models.ForeignKey(db_column='taskId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.task')),
            ],
            options={
                'db_table': 'lifts_tasks',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='lift',
            name='status',
            field=models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtypestatus'),
        ),
        migrations.AddField(
            model_name='job',
            name='round',
            field=models.ForeignKey(db_column='roundId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.round'),
        ),
        migrations.AddField(
            model_name='contract',
            name='contract_frequency',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.contractfrequency'),
        ),
        migrations.CreateModel(
            name='ClosedWorkorder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_by_project', models.IntegerField(db_column='idByProject')),
                ('customer_id', models.IntegerField(db_column='customerId')),
                ('accepted_datetime', models.DateTimeField(blank=True, db_column='acceptedDatetime', null=True)),
                ('started_datetime', models.DateTimeField(blank=True, db_column='startedDatetime', null=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, db_column='scheduledDatetime', null=True)),
                ('completed_datetime', models.DateTimeField(blank=True, db_column='completedDatetime', null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=32000, null=True)),
                ('solution', models.CharField(blank=True, max_length=32000, null=True)),
                ('signature', models.IntegerField(blank=True, db_column='signatureId', null=True)),
                ('attention_time', models.IntegerField(blank=True, db_column='attentionTime', null=True)),
                ('solution_time', models.IntegerField(blank=True, db_column='solutionTime', null=True)),
                ('expected_time', models.IntegerField(blank=True, db_column='expectedTime', null=True)),
                ('is_chargeable', models.BooleanField(db_column='isChargeable', default='False')),
                ('part_required', models.IntegerField(db_column='partRequired')),
                ('correction', models.ForeignKey(db_column='correctionId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.correction')),
                ('detected_fault', models.ForeignKey(blank=True, db_column='detectedFaultId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wo_detected_fault', to='mrsModel.fault')),
                ('job', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.job')),
                ('lift', models.ForeignKey(db_column='liftId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.lift')),
                ('priority', models.ForeignKey(db_column='priorityId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.priority')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.project')),
                ('reported_fault', models.ForeignKey(blank=True, db_column='reportedFaultId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='wo_reported_fault', to='mrsModel.fault')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.processtypestatus')),
                ('technician', models.ForeignKey(db_column='technicianId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.technician')),
                ('workorder_lifts', models.ManyToManyField(to='mrsModel.WorkorderLift')),
            ],
            options={
                'db_table': 'closed_workorders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Callout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_printed', models.IntegerField(blank=True, db_column='isPrinted', null=True)),
                ('florNumber', models.CharField(blank=True, db_column='floorNo', max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('part_description', models.CharField(blank=True, db_column='partDescription', max_length=255, null=True)),
                ('attributable_id', models.IntegerField(blank=True, db_column='attributableId', null=True)),
                ('tech_description', models.CharField(blank=True, db_column='techDescription', max_length=255, null=True)),
                ('docket_number', models.CharField(blank=True, db_column='docketNumber', max_length=255, null=True)),
                ('callout_time', models.DateTimeField(blank=True, db_column='calloutTime', null=True)),
                ('time_arrival', models.DateTimeField(blank=True, db_column='timeArrival', null=True)),
                ('rectification_time', models.DateTimeField(blank=True, db_column='rectificationTime', null=True)),
                ('time_departure', models.DateTimeField(blank=True, db_column='timeDeparture', null=True)),
                ('chargeable_id', models.IntegerField(blank=True, db_column='chargeableId', null=True)),
                ('technician_signature', models.CharField(blank=True, db_column='technicianSignature', max_length=255, null=True)),
                ('customer_signature', models.CharField(blank=True, db_column='customerSignature', max_length=255, null=True)),
                ('accepted_id', models.IntegerField(blank=True, db_column='acceptedId', null=True)),
                ('notify_email', models.CharField(blank=True, db_column='notifyEmail', max_length=50, null=True)),
                ('verify', models.CharField(blank=True, max_length=255, null=True)),
                ('reported_customer', models.CharField(blank=True, db_column='reportedCustomer', max_length=255, null=True)),
                ('photo_name', models.CharField(blank=True, db_column='photoName', max_length=50, null=True)),
                ('correction', models.ForeignKey(db_column='correctionId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.correction')),
                ('priority', models.ForeignKey(blank=True, db_column='priorityId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.priority')),
                ('technician_fault', models.ForeignKey(blank=True, db_column='technicianFaultId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.fault')),
                ('workorder', models.ForeignKey(blank=True, db_column='workorderId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrsModel.workorder')),
            ],
            options={
                'db_table': 'callouts',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='contact',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mrsModel.contact'),
        ),
    ]
