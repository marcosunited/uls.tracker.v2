# Generated by Django 3.1.2 on 2021-02-02 00:31

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mrs.utils.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionsHistory',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rule', models.JSONField()),
                ('variables', models.CharField(blank=True, max_length=250)),
                ('actions', models.CharField(blank=True, max_length=250)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('model_state', models.JSONField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hash', models.CharField(blank=True, max_length=250)),
                ('executed', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.PositiveIntegerField()),
                ('street', models.CharField(max_length=250)),
                ('post_code', models.PositiveIntegerField()),
                ('suburb', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'addresses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'agents',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('concept_id', models.IntegerField(db_column='conceptId', unique=True)),
                ('value_concept', models.IntegerField(db_column='valueConcept')),
                ('name', models.CharField(max_length=255)),
                ('path', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'attachments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('company', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'brands',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=70)),
                ('last_name', models.CharField(max_length=70)),
                ('phone_number', models.CharField(max_length=50)),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'contacts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, db_column='isActive', null=True)),
                ('start_datetime', models.DateTimeField(blank=True, db_column='startDatetime', null=True)),
                ('end_datetime', models.DateTimeField(blank=True, db_column='endDatetime', null=True)),
                ('stand_by_datetime', models.DateTimeField(blank=True, db_column='standByDatetime', null=True)),
                ('reactive_datetime', models.DateTimeField(blank=True, db_column='reactiveDatetime', null=True)),
                ('cancel_datetime', models.CharField(blank=True, db_column='cancelDatetime', max_length=255, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('contract_mtn_frequency', models.CharField(blank=True, max_length=250, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'contracts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContractFrequency',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('days_frequency', models.IntegerField(default=7)),
            ],
            options={
                'db_table': 'contracts_frequencies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Correction',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'corrections',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=70)),
                ('currency_code', models.CharField(max_length=3)),
                ('unlocale', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'countries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'customers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fault',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('full_name', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'faults',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FileDocument',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file_sequence', models.PositiveIntegerField(blank=True, null=True)),
                ('is_upload', models.BooleanField(blank=True, null=True)),
                ('file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='c:\\upload'), upload_to=mrs.utils.storage.get_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'db_table': 'groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reorder_details', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(db_column='quantity')),
                ('warning_quantity', models.IntegerField(db_column='warning_quantity')),
                ('shelf_number', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'inventory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JhaItem',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('is_ticked_default', models.IntegerField(blank=True, db_column='isTickedDefault', null=True)),
            ],
            options={
                'db_table': 'jha_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField(verbose_name='Number')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('floors', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, db_column='postCode', max_length=12, null=True)),
                ('key_access_details', models.CharField(blank=True, db_column='keyAccessDetails', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, max_length=2048, null=True)),
                ('position', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, db_column='address', max_length=100, null=True)),
                ('suburb', models.CharField(blank=True, db_column='suburb', max_length=100, null=True)),
                ('owner_details', models.CharField(blank=True, db_column='ownerDetails', max_length=250, null=True)),
            ],
            options={
                'db_table': 'jobs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lift',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('controller', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_number', models.CharField(blank=True, db_column='registrationNumber', max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField(db_column='isActive')),
                ('floor', models.CharField(blank=True, max_length=10, null=True)),
                ('drive', models.CharField(blank=True, max_length=255, null=True)),
                ('has_light_trays', models.IntegerField(db_column='hasLightRays')),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('installed_date', models.DateTimeField(blank=True, db_column='installedDate', null=True)),
                ('installed_by', models.CharField(blank=True, max_length=50, null=True)),
                ('lift_type', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'lifts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('source', models.IntegerField(default=1)),
                ('docket_number', models.IntegerField(blank=True, null=True)),
                ('schedule_date', models.DateField(db_column='scheduleDate')),
                ('datetime_arrival', models.DateTimeField(blank=True, null=True)),
                ('datetime_departure', models.DateTimeField(blank=True, null=True)),
                ('customer_signature', models.ImageField(blank=True, null=True, upload_to='')),
                ('technician_signature', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'maintenances',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaintenanceMonth',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('month_number', models.IntegerField()),
            ],
            options={
                'db_table': 'maintenance_months',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MaintenancePlan',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('start_datetime', models.DateTimeField()),
            ],
            options={
                'db_table': 'maintenance_plans',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MetadataType',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'metadata_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MetadataValue',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'metadata_values',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MrsField',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('isList', models.BooleanField(default=False)),
                ('list_source_model', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'mrs_fields',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MrsOperator',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=50)),
                ('django_lookup', models.CharField(max_length=50)),
                ('rules_operator', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'mrs_mrsoperator',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=8000)),
            ],
            options={
                'db_table': 'notes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('part_number', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('photo', models.CharField(max_length=500)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'parts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartRequest',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='quantity')),
                ('description', models.CharField(blank=True, max_length=4000, null=True)),
                ('reason_chargeable', models.CharField(blank=True, db_column='reasonChargeable', max_length=4000, null=True)),
                ('remark', models.CharField(blank=True, max_length=512, null=True)),
                ('project', models.IntegerField(db_column='projectId')),
            ],
            options={
                'db_table': 'parts_requests',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('level', models.SmallIntegerField(default=1)),
            ],
            options={
                'db_table': 'priority',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessType',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'process_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProcessTypeStatus',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(db_column='isActive', default=True)),
                ('is_initial', models.BooleanField(db_column='isInitial', default=True)),
                ('is_final', models.BooleanField(db_column='isFinal', default=False)),
                ('sequence_number', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'db_table': 'process_types_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, db_column='fullName', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
                ('email_verified', models.BooleanField(blank=True, db_column='emailVerified', null=True)),
                ('alternative_email', models.EmailField(blank=True, max_length=200, null=True)),
                ('street_address', models.CharField(blank=True, db_column='streetAddress', max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, db_column='postCode', max_length=12, null=True)),
                ('phone_verified', models.IntegerField(blank=True, db_column='phoneVerified', null=True)),
                ('status', models.IntegerField(blank=True, db_column='statusId', null=True)),
                ('last_position', models.TextField(blank=True, db_column='lastPosition', null=True)),
                ('localization_code', models.CharField(blank=True, db_column='localizationCode', max_length=8, null=True)),
                ('currency_code', models.CharField(blank=True, db_column='currencyCode', max_length=3, null=True)),
                ('is_active', models.BooleanField(blank=True, db_column='isActive', default=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images/avatar')),
                ('country', models.ForeignKey(blank=True, db_column='countryId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.country')),
            ],
            options={
                'db_table': 'profile',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(db_column='isActive', default=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'projects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('report_processor', models.CharField(max_length=150)),
                ('report_template', models.TextField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.contenttype')),
            ],
            options={
                'db_table': 'reports',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'service_area',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceTarget',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('key_name', models.CharField(db_column='keyName', max_length=50)),
            ],
            options={
                'db_table': 'services_targets',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'service_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module', models.CharField(max_length=20)),
                ('key', models.CharField(max_length=3)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(max_length=255)),
                ('value1', models.CharField(blank=True, max_length=255, null=True)),
                ('value2', models.CharField(blank=True, max_length=255, null=True)),
                ('value3', models.CharField(blank=True, max_length=255, null=True)),
                ('value4', models.CharField(blank=True, max_length=255, null=True)),
                ('value5', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'settings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StorageSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('notes', models.CharField(max_length=255)),
                ('profile', models.OneToOneField(db_column='profileId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.profile')),
            ],
            options={
                'db_table': 'technicians',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(max_length=255)),
                ('next_status', models.ForeignKey(db_column='nextStatus', on_delete=django.db.models.deletion.DO_NOTHING, related_name='wf_next_status', to='mrs.processtypestatus')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, related_name='wf_current_status', to='mrs.processtypestatus')),
            ],
            options={
                'db_table': 'workflows',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Workorder',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_by_project', models.IntegerField(db_column='idByProject')),
                ('docket_number', models.IntegerField(blank=True, null=True)),
                ('accepted_datetime', models.DateTimeField(blank=True, db_column='acceptedDatetime', null=True)),
                ('scheduled_datetime', models.DateTimeField(blank=True, db_column='scheduledDatetime', null=True)),
                ('started_datetime', models.DateTimeField(blank=True, db_column='startedDatetime', null=True)),
                ('completed_datetime', models.DateTimeField(blank=True, db_column='completedDatetime', null=True)),
                ('toa', models.DateTimeField(blank=True, db_column='toa', null=True)),
                ('tod', models.DateTimeField(blank=True, db_column='tod', null=True)),
                ('detected_fault', models.IntegerField(blank=True, db_column='detectedFaultId', null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('technician_description', models.TextField(blank=True, max_length=32000, null=True)),
                ('solution', models.TextField(blank=True, max_length=32000, null=True)),
                ('customer_signature', models.ImageField(blank=True, null=True, upload_to='')),
                ('technician_signature', models.ImageField(blank=True, null=True, upload_to='')),
                ('attention_time', models.IntegerField(blank=True, db_column='attentionTime', null=True)),
                ('solution_time', models.IntegerField(blank=True, db_column='solutionTime', null=True)),
                ('expected_time', models.IntegerField(blank=True, db_column='expectedTime', null=True)),
                ('is_chargeable', models.BooleanField(db_column='isChargeable', default='False')),
                ('is_closed', models.BooleanField(db_column='isClosed', default=False)),
                ('correction', models.ForeignKey(db_column='correctionId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.correction')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.customer')),
                ('jha_items', models.ManyToManyField(to='mrs.JhaItem')),
                ('job', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.job')),
                ('lifts', models.ManyToManyField(to='mrs.Lift')),
                ('notes', models.ManyToManyField(to='mrs.Note')),
                ('parts_required', models.ManyToManyField(to='mrs.Part')),
                ('priority', models.ForeignKey(db_column='priorityId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.priority')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('reported_fault', models.ForeignKey(blank=True, db_column='reportedFaultId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.fault')),
                ('service_areas', models.ManyToManyField(to='mrs.ServiceArea')),
                ('service_target', models.ForeignKey(db_column='serviceTargetId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.servicetarget')),
                ('service_types', models.ManyToManyField(to='mrs.ServiceType')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.processtypestatus')),
                ('technician', models.ForeignKey(db_column='technicianId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.technician')),
            ],
            options={
                'db_table': 'workorders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='YearMaintenanceTemplate',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('enabled', models.BooleanField(default=True)),
                ('apr', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='apr', to='mrs.maintenancemonth')),
                ('aug', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aug', to='mrs.maintenancemonth')),
                ('dec', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dec', to='mrs.maintenancemonth')),
                ('feb', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feb', to='mrs.maintenancemonth')),
                ('jan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jan', to='mrs.maintenancemonth')),
                ('jul', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jul', to='mrs.maintenancemonth')),
                ('jun', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jun', to='mrs.maintenancemonth')),
                ('mar', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mar', to='mrs.maintenancemonth')),
                ('may', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='may', to='mrs.maintenancemonth')),
                ('nov', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nov', to='mrs.maintenancemonth')),
                ('oct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='oct', to='mrs.maintenancemonth')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('sep', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sep', to='mrs.maintenancemonth')),
            ],
            options={
                'db_table': 'year_maintenance_template',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkorderLocation',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(blank=True, decimal_places=4, max_digits=4, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=4, max_digits=4, null=True)),
                ('position', models.TextField()),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('status', models.ForeignKey(db_column='statusId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.processtypestatus')),
                ('workorder', models.ForeignKey(db_column='workorderId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.workorder')),
            ],
            options={
                'db_table': 'workorders_positions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkflowEvent',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('new_status', models.ForeignKey(db_column='newStatus', on_delete=django.db.models.deletion.DO_NOTHING, related_name='wo_new_status', to='mrs.processtypestatus')),
                ('previous_status', models.ForeignKey(db_column='previousStatus', on_delete=django.db.models.deletion.DO_NOTHING, related_name='event_previous_status', to='mrs.processtypestatus')),
                ('process_type', models.ForeignKey(db_column='processTypeId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.processtype')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('workflow', models.ForeignKey(db_column='workflowId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.workflow')),
            ],
            options={
                'db_table': 'workflow_event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TaskTemplate',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('enabled', models.BooleanField(default=True)),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
            ],
            options={
                'db_table': 'task_templates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('maintenance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mrs.maintenance')),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('status', models.ForeignKey(db_column='statusId', default='1', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.processtypestatus')),
                ('task_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.tasktemplate')),
            ],
            options={
                'db_table': 'tasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrs.contact')),
            ],
            options={
                'db_table': 'suppliers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField(verbose_name='Number')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mrs.job')),
            ],
            options={
                'db_table': 'sites',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServicesTypes',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('key_name', models.CharField(db_column='keyName', max_length=10)),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
            ],
            options={
                'db_table': 'services_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('conditions', models.JSONField()),
                ('content_type', models.ForeignKey(db_column='contentTypeId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.contenttype')),
                ('project', models.ForeignKey(blank=True, db_column='projectId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
            ],
            options={
                'db_table': 'business_rules',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(db_column='isActive')),
                ('colour', models.CharField(blank=True, max_length=30, null=True)),
                ('polygon', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(db_column='projectId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.project')),
                ('technicians', models.ManyToManyField(blank=True, to='mrs.Technician')),
            ],
            options={
                'db_table': 'rounds',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReportHistory',
            fields=[
                ('is_deleted', models.BooleanField(db_column='isDeleted', default=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('finish_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('output_file', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='c:\\reports'), upload_to='')),
                ('result', models.CharField(blank=True, max_length=30, null=True)),
                ('report', models.ForeignKey(db_column='reportId', on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.report')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='default_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='default_project', to='mrs.project'),
        ),
        migrations.AddField(
            model_name='profile',
            name='projects',
            field=models.ManyToManyField(to='mrs.Project'),
        ),
        migrations.AddField(
            model_name='profile',
            name='title',
            field=models.ForeignKey(blank=True, db_column='titleId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mrs.metadatavalue'),
        ),
    ]
